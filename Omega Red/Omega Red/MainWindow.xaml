<Window x:Class="Omega_Red.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:tb="clr-namespace:Hardcodet.Wpf.TaskbarNotification"
        xmlns:panels="clr-namespace:Omega_Red.Panels"
        xmlns:tools="clr-namespace:Omega_Red.Tools"
        xmlns:convertor="clr-namespace:Omega_Red.Tools.Converters"
        xmlns:viewModels="clr-namespace:Omega_Red.ViewModels"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        WindowStyle="None"
        Title="{DynamicResource MainName}" Height="600" Width="800"
        Loaded="Window_Loaded"
        Closed="Window_Closed"
        StateChanged="Window_StateChanged"
        Background="{DynamicResource MainWindowBackgroundBrush}"
        >
    <Window.Resources>
        <viewModels:ConfigViewModel x:Key="mConfigViewModel"/>
        <tools:PlayingControl x:Key="mPlayingControl"/>
        <convertor:WidthConverter Offset="-5.0" Scale="-1.0" x:Key="mControlLeftWidthOffset"/>
        <convertor:WidthConverter Offset="-5.0" Scale="-1.0" x:Key="mControlRightWidthOffset"/>
        <Storyboard x:Key="AnimOpenControlPanel" x:Shared="False">
            <DoubleAnimation 
                            Storyboard.TargetName="mControlGrid"
                            Storyboard.TargetProperty="(Canvas.Left)"
                            To="0" Duration="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <Int32Animation 
                            Storyboard.TargetName="mControlGrid"
                            Storyboard.TargetProperty="(Canvas.ZIndex)"
                            From="0" To="1" Duration="0:0:0.25">
            </Int32Animation>
        </Storyboard>
        <Storyboard x:Key="AnimCloseControlPanel" x:Shared="False" Completed="Storyboard_Completed">
            <DoubleAnimation 
                            Storyboard.TargetName="mControlGrid"
                            Storyboard.TargetProperty="(Canvas.Left)"
                            FillBehavior="Stop"
                            To="{Binding ElementName=mControlPanel, Path=ActualWidth, Converter={StaticResource mControlRightWidthOffset}}"
                Duration="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseIn" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <Int32Animation 
                            Storyboard.TargetName="mMediaGrid"
                            Storyboard.TargetProperty="(Canvas.ZIndex)"
                            To="0" Duration="0:0:0.25">
            </Int32Animation>
        </Storyboard>
        <Storyboard x:Key="AnimOpenMediaPanel" x:Shared="False">
            <DoubleAnimation 
                            Storyboard.TargetName="mMediaGrid"
                            Storyboard.TargetProperty="(Canvas.Right)"
                            To="0" Duration="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <Int32Animation 
                            Storyboard.TargetName="mMediaGrid"
                            Storyboard.TargetProperty="(Canvas.ZIndex)"
                            From="0" To="1" Duration="0:0:0.25">
            </Int32Animation>
        </Storyboard>
        <Storyboard x:Key="AnimCloseMediaPanel" x:Shared="False" Completed="Storyboard_Completed_1">
            <DoubleAnimation 
                            Storyboard.TargetName="mMediaGrid"
                            Storyboard.TargetProperty="(Canvas.Right)"
                            FillBehavior="Stop"
                            To="{Binding ElementName=mMediaPanel, Path=ActualWidth, Converter={StaticResource mControlRightWidthOffset}}" 
                Duration="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseIn" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <Int32Animation 
                            Storyboard.TargetName="mMediaGrid"
                            Storyboard.TargetProperty="(Canvas.ZIndex)"
                            To="0" Duration="0:0:0.25">
            </Int32Animation>
        </Storyboard>
    </Window.Resources>
    <Grid>
        <tb:TaskbarIcon x:Name="mTaskbarIcon" IconSource="Omega_red_64.ico"/>
        <Grid>
            <panels:TouchPadPanel x:Name="m_PadPanel">
                <panels:DisplayControl HorizontalAlignment="Stretch"/>
            </panels:TouchPadPanel>
            <StackPanel Orientation="Vertical" 
                    HorizontalAlignment="Center" VerticalAlignment="Top">
                <Border BorderBrush="{DynamicResource StandardBorderBrush}" 
                    CornerRadius="{DynamicResource StandardCornerRadius}" 
                    Background="{DynamicResource LockScreenBackgroundBrush}"
                    BorderThickness="{DynamicResource StandardBorderThickness}"
                    HorizontalAlignment="Center"
                    Margin="0,40,0,-30">
                    <TextBlock FontSize="{DynamicResource TitleFontSize}" Margin="10"
                           FontWeight="{DynamicResource TitleFontWeight}"
                           Text="{Binding Source={StaticResource mPlayingControl}, Path=Message}" 
                           Foreground="{DynamicResource LockScreenForegroundBrush}"/>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={StaticResource mPlayingControl}, Path=Message}" Value ="">
                                    <Setter Property="Visibility" Value ="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <Border Margin="0,40,0,0" BorderBrush="{DynamicResource StandardBorderBrush}" 
                    CornerRadius="{DynamicResource StandardCornerRadius}" 
                    Background="{DynamicResource LockScreenBackgroundBrush}"
                    BorderThickness="{DynamicResource StandardBorderThickness}"
                        HorizontalAlignment="Center">
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="36"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" FontSize="{DynamicResource TitleFontSize}" Margin="10,10,5,10"
                               HorizontalAlignment="Left"
                           FontWeight="{DynamicResource TitleFontWeight}"
                           Text="{DynamicResource RefreshScreenTitle}" 
                           Foreground="{DynamicResource LockScreenForegroundBrush}"/>
                        <TextBlock Grid.Column="1" FontSize="{DynamicResource TitleFontSize}" Margin="0,10"
                               HorizontalAlignment="Center"
                           FontWeight="{DynamicResource TitleFontWeight}"
                           Text="{Binding Source={StaticResource mConfigViewModel}, Path=FrameRate}" 
                           Foreground="{DynamicResource LockScreenForegroundBrush}"/>
                        <TextBlock Grid.Column="2" FontSize="{DynamicResource TitleFontSize}" Margin="5,10,10,10"
                               HorizontalAlignment="Left"
                           FontWeight="{DynamicResource TitleFontWeight}"
                           Text="{DynamicResource FPSTitle}" 
                           Foreground="{DynamicResource LockScreenForegroundBrush}"/>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={StaticResource mConfigViewModel}, Path=FrameRate}" Value ="">
                                    <Setter Property="Visibility" Value ="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="16*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Border Grid.RowSpan="4" Margin="0,0,-20,0" Background="Transparent"/>

            <Border Grid.RowSpan="4" Grid.Column="2" Margin="-20,0,0,0" Background="Transparent"/>

            <Viewbox Grid.Row="0" Grid.Column="2" VerticalAlignment="Top">
                <Button Style="{DynamicResource IconBtn}"  Margin="10" Command="{Binding AddCommand}">
                    <Image Source="/Assests/Images/TakeScreenshot.png" 
                                   Stretch="Uniform" 
                                   Height="64" 
                                   Width="64" Opacity="0.5"/>
                    <Button.DataContext>
                        <viewModels:ScreenshotsInfoViewModel/>
                    </Button.DataContext>
                </Button>
            </Viewbox>

            <Viewbox Grid.Row="1" Grid.Column="2" VerticalAlignment="Top">
                <Grid Visibility="{Binding VisibilityVideoRecordingState}">
                    <Grid.DataContext>
                        <viewModels:MediaRecorderInfoViewModel/>
                    </Grid.DataContext>
                    <CheckBox Style="{DynamicResource MediaRecorderCheckBox}" Margin="10">
                        <CheckBox.Triggers>
                            <EventTrigger RoutedEvent="CheckBox.Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        BeginTime="00:00:00" 
                                         AutoReverse="True"
                                        RepeatBehavior="Forever">
                                            <LinearColorKeyFrame KeyTime="00:00:00" Value="#FFFF0000"/>
                                            <LinearColorKeyFrame KeyTime="00:00:00.75" Value="#00FF0000"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="CheckBox.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        BeginTime="00:00:00" 
                                         FillBehavior="HoldEnd">
                                            <LinearColorKeyFrame KeyTime="00:00:00" Value="#FF00FF00"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </CheckBox.Triggers>
                    </CheckBox>
                    <Viewbox Visibility="{Binding LockVisibility}">
                        <panels:ProgressBanner/>
                    </Viewbox>
                </Grid>
            </Viewbox>

            <Border BorderBrush="{DynamicResource StandardBorderBrush}" BorderThickness="{DynamicResource StandardBorderThickness}" Visibility="{Binding LockVisibility}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2" VerticalAlignment="Top" HorizontalAlignment="Right">
                <Border.DataContext>
                    <viewModels:ScreenshotsInfoViewModel/>
                </Border.DataContext>
                <Border.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Duration="0:0:1.4">
                                                <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0" />
                                                <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1" />
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:1.4">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Viewbox>
                    <Image Source="{Binding ScreenshotSource}"/>
                </Viewbox>
            </Border>

            <Viewbox Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Button Style="{DynamicResource IconBtn}" Margin="10" Command="{Binding QuickSaveCommand}">
                    <Image Source="/Assests/Images/SaveState.png" 
                                       Stretch="Uniform" 
                                       Height="64" 
                                       Width="64" Opacity="{DynamicResource StandardOpacity}"/>
                    <Button.DataContext>
                        <viewModels:SaveStateInfoViewModel/>
                    </Button.DataContext>
                </Button>
            </Viewbox>

            <Viewbox Grid.Row="1" Grid.RowSpan="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                <panels:SoundControl Orientation="Vertical" Margin="10,0,10,10" Opacity="{DynamicResource StandardOpacity}" IsMuted="{Binding Source={StaticResource mConfigViewModel}, Path=IsMuted, Mode=TwoWay}"  Volume="{Binding Source={StaticResource mConfigViewModel}, Path=SoundLevel, Mode=TwoWay}"/>
            </Viewbox>

            

        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="8*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Viewbox Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                <UserControl 
                Opacity="{DynamicResource StandardOpacity}"
                Visibility="{Binding VisibilityState}"
                Width="300"
                Height="160">
                    <UserControl.DataContext>
                        <viewModels:AutoSaveStateViewModel/>
                    </UserControl.DataContext>
                    <ListView Background="Transparent" BorderBrush="Transparent" ScrollViewer.VerticalScrollBarVisibility="Disabled" Style="{DynamicResource InfoListView}"/>
                </UserControl>
            </Viewbox>
        </Grid>
        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid x:Name="mControlGrid" 
                  Canvas.Top="0" 
                  Canvas.Left="{Binding ElementName=mControlPanel, Path=ActualWidth, Converter={StaticResource mControlLeftWidthOffset}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Background="{DynamicResource MainBackgroundBrush}"/>
                <panels:ControlPanel x:Name="mControlPanel"/>
                <Border Grid.ColumnSpan="2" BorderThickness="{DynamicResource StandardBorderThickness}" BorderBrush="{DynamicResource StandardBorderBrush}" />
                <Viewbox  VerticalAlignment="Center" 
                          Grid.Column="2" >
                    <CheckBox Style="{DynamicResource PanelCheckBoxStyle}" 
                          Visibility="{Binding Source={StaticResource mConfigViewModel}, Path=TouchControlHideVisibility}"
                          IsChecked="{Binding Source={StaticResource mPlayingControl}, Path=IsPaused}"     
                          Command="{Binding Source={StaticResource mPlayingControl}, Path=IsPausedCommand}"
                          Width="130"
                          x:Name="mControlChkBtn">
                        <CheckBox.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </CheckBox.LayoutTransform>
                        <CheckBox.Triggers>
                            <EventTrigger RoutedEvent="CheckBox.Checked">
                                <BeginStoryboard Storyboard="{StaticResource AnimOpenControlPanel}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="CheckBox.Unchecked">
                                <BeginStoryboard Storyboard="{StaticResource AnimCloseControlPanel}"/>
                            </EventTrigger>
                        </CheckBox.Triggers>
                        <TextBlock HorizontalAlignment="Center" FontWeight="Medium" FontSize="22" VerticalAlignment="Center" Text="{DynamicResource ControlTitle}"/>
                    </CheckBox>
                </Viewbox>
                <Button x:Name="mControlCloseBtn"
                        Grid.Column="1"
                        Click="mControlCloseBtn_Click"
                        Style="{DynamicResource TouchDragBtn}">
                    <Button.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </Button.LayoutTransform>
                </Button>
            </Grid>
            <Grid x:Name="mMediaGrid" 
                  Canvas.Top="0" 
                  Canvas.Right="{Binding ElementName=mMediaPanel, Path=ActualWidth, Converter={StaticResource mControlRightWidthOffset}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1" Grid.ColumnSpan="2" Background="{DynamicResource MainBackgroundBrush}"/>
                <panels:MediaPanel x:Name="mMediaPanel" Grid.Column="2"/>
                <Border Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="{DynamicResource StandardBorderThickness}" BorderBrush="{DynamicResource StandardBorderBrush}"/>

                

                <Viewbox VerticalAlignment="Center">
                    <CheckBox Style="{DynamicResource PanelCheckBoxStyle}"
                          Visibility="{Binding Source={StaticResource mConfigViewModel}, Path=TouchControlHideVisibility}"
                          IsChecked="{Binding IsPaused}" 
                              Command="{x:Null}"
                          Width="110" 
                          x:Name="mMediaChkBtn">
                        <CheckBox.DataContext>
                            <tools:PlayingControl/>
                        </CheckBox.DataContext>
                        <CheckBox.LayoutTransform>
                            <RotateTransform Angle="270"/>
                        </CheckBox.LayoutTransform>
                        <CheckBox.Triggers>
                            <EventTrigger RoutedEvent="CheckBox.Checked">
                                <BeginStoryboard Storyboard="{StaticResource AnimOpenMediaPanel}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="CheckBox.Unchecked">
                                <BeginStoryboard Storyboard="{StaticResource AnimCloseMediaPanel}"/>
                            </EventTrigger>
                        </CheckBox.Triggers>
                        <TextBlock HorizontalAlignment="Center" FontWeight="Medium" FontSize="22" VerticalAlignment="Center" Text="{DynamicResource MediaTitle}"/>
                    </CheckBox>
                </Viewbox>
                <Button x:Name="mMediaCloseBtn"
                        Grid.Column="1"
                        Click="mMediaCloseBtn_Click"
                        Style="{DynamicResource TouchDragBtn}">
                    <Button.LayoutTransform>
                        <RotateTransform Angle="270"/>
                    </Button.LayoutTransform>
                </Button>
            </Grid>
        </Canvas>
        <panels:LockScreenPanel/>
        <panels:QuickSaveStatePanel/>
    </Grid>
</Window>
