<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">  
    
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid Background="#00000000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="32" />
            </Grid.ColumnDefinitions>
            <Path x:Name="Arrow"
                  RenderTransformOrigin="0.5,0.5"
                  Grid.Column="1"    
                  Fill="{DynamicResource ExpanderToggleButtonBrush}"
                  Stroke="{DynamicResource ExpanderToggleButtonBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 8 12 L 16 0 Z"/>
            <ContentPresenter Grid.Column="0" Margin="3"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightBlue"/>
                <Setter TargetName="Arrow" Property="Fill" Value="LightBlue" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="Blue"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ExpanderToggleButtonBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Expander}" >
        <Setter Property="BorderBrush" Value="{DynamicResource StandardBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MainForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource StandardBorderThickness}" />
        <Setter Property="FontSize" Value="19"/>
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition x:Name="ContentRow" Height="0"/>
                            </Grid.RowDefinitions>
                            <ToggleButton 
                            Template="{DynamicResource ExpanderToggleButton}"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          ContentSource="Header"/>
                            </ToggleButton>
                            <Border x:Name="Content" Grid.Row="1" Padding="2">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"/>
                            </Border>
                            <Border Grid.Row="1" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Height="2"
                                    VerticalAlignment="Top"
                                    />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                   Value="True">
                            <Setter TargetName="ContentRow"
                    Property="Height"
                    Value="{Binding DesiredHeight, ElementName=Content}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>