<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="PanelCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource StandardBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StandardBorderBrush}"/>
        <Setter Property="Command" Value="{Binding IsPausedCommand}" />
        <Setter Property="Opacity" Value="{DynamicResource StandardOpacity}" />
        <Setter Property="CommandParameter" Value="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="11"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="4"/>
                            <ColumnDefinition Width="12"/>
                        </Grid.ColumnDefinitions>
                        <Path Data="M 15 29.5 L 0 29.5 10 0.5 15 0.5" Height="30" Grid.Column="0" Grid.ColumnSpan="2" StrokeThickness="1" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                        <Path Data="M 0 0.5 L 5 0.5 15 29.5 0 29.5" Height="30" Grid.Column="3" Grid.ColumnSpan="2" StrokeThickness="1" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                        <Border Grid.Column="1" Grid.ColumnSpan="3" Height="29.5" Background="{TemplateBinding Background}" BorderThickness="0,1,0,1" Margin="0,0,0,-1" BorderBrush="{TemplateBinding BorderBrush}" >
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"  />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayPauseCheckBox" TargetType="CheckBox">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Background" Value="{DynamicResource WhiteBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StandardBorderBrush}"/>
        <Setter Property="Command" Value="{Binding PlayPauseCommand}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Margin}" >
                        <Ellipse Fill="{TemplateBinding Background}" />
                        <Viewbox Stretch="Uniform" Margin="15,15,13,13">
                            <Path x:Name="mGlifPath" 
                                  Stroke="{TemplateBinding BorderBrush}" 
                                  Fill="{TemplateBinding Foreground}" 
                                  StrokeThickness="15" 
                                  Data="M 45,0 L 45,200 L 200,100 Z" >
                                <Path.BitmapEffect>
                                    <BlurBitmapEffect Radius="{DynamicResource BlurRadius}" KernelType="Gaussian" />
                                </Path.BitmapEffect>
                            </Path>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mGlifPath" Property="Data" Value="M 0,0 L 0,200 L 40,200 L 40,0 Z M 80,0 L 80,200 L 120,200 L 120,0 Z" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Status}" Value="Stopped" >
                            <Setter Property="IsChecked" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Started" >
                            <Setter Property="IsChecked" Value="True" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MediaRecorderCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource MediaRecorderCheckBoxUncheckBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StandardBorderBrush}"/>
        <Setter Property="Command" Value="{Binding StartStopRecordingCommand}" />
        <Setter Property="Opacity" Value="{DynamicResource StandardOpacity}" />
        <Setter Property="IsChecked" Value="{Binding IsCheckedStatus}"/>
        <Setter Property="CommandParameter" Value="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Effect">
            <Setter.Value>                
                <DropShadowEffect Color="{DynamicResource DropShadowColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Margin="5,18,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Path Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Data="M -2.5,0 L 47.5,-10 L 50, 0 L 0, 10 Z">
                            <Path.Fill>
                                <LinearGradientBrush
            StartPoint="0,0" EndPoint="1,-0.70">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="Black" Offset="0.13" />
                                            <GradientStop Color="White" Offset="0.13" />
                                            <GradientStop Color="White" Offset="0.305" />
                                            <GradientStop Color="Black" Offset="0.305" />
                                            <GradientStop Color="Black" Offset="0.52" />
                                            <GradientStop Color="White" Offset="0.52" />
                                            <GradientStop Color="White" Offset="0.7" />
                                            <GradientStop Color="Black" Offset="0.7" />
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Path Grid.Row="1" Stroke="{TemplateBinding BorderBrush}" Fill="Black" StrokeThickness="1" Data="M 0,0 L 50,0 L 50,35 L 0,35 Z" />
                        <Ellipse Grid.Row="1" Width="15" Height="15" Margin="5" HorizontalAlignment="Right" VerticalAlignment="Bottom" Fill="{TemplateBinding Background}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25"/>
                            <Setter Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect Opacity="0.0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect Opacity="0.0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StateCheckBox" TargetType="CheckBox">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Background" Value="{DynamicResource UnpressedButtonBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StandardBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Margin}" >
                        <Viewbox Stretch="Uniform">
                            <Border x:Name="mBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="10" BorderThickness="{DynamicResource StandardBorderThickness}" CornerRadius="{DynamicResource StandardCornerRadius}">
                                <ContentPresenter/>
                            </Border>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mBorder" Property="Background" Value="#10FF10" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding Status}" Value="Stopped" >
                            <Setter Property="IsChecked" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Started" >
                            <Setter Property="IsChecked" Value="True" />
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MainStateCheckBox" TargetType="CheckBox">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Background" Value="{DynamicResource UnpressedButtonBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StandardBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Margin}" >
                        <Viewbox Stretch="Uniform">
                            <Grid>
                                <Ellipse x:Name="mBorder" Width="30" Height="30" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="4" />
                            </Grid>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mBorder" Property="Fill" Value="{DynamicResource PressedButtonBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding Status}" Value="Stopped" >
                            <Setter Property="IsChecked" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Started" >
                            <Setter Property="IsChecked" Value="True" />
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>