<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Omega_Red.Tools.Converters"
                    xmlns:panels="clr-namespace:Omega_Red.Panels"
                    xmlns:tools="clr-namespace:Omega_Red.Tools">

    

    <ItemsPanelTemplate x:Key="ButtonItemsPanel">
        <StackPanel/>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="TouchItemsPanel">
        <WrapPanel/>
    </ItemsPanelTemplate>


    <Style x:Key="ItemListView" TargetType="ListView">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="ItemsPanel" Value="{Binding ItemsPanelTemplateSelector}"/>
    </Style>

    <Style x:Key="InfoListView" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemsSource" Value="{Binding Collection}"/>
        <Setter Property="ItemTemplateSelector" Value="{Binding DataTemplateSelector}"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="ItemsPanel" Value="{Binding ItemsPanelTemplateSelector}"/>
    </Style>

    <Style TargetType="{x:Type ListViewItem}" >
        <Setter Property="Focusable" Value="{Binding Focusable}"/>
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ControlTemplate.Resources>
                        <converters:VisibilityConverter x:Key="m_VisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Border Margin="6" x:Name="Border" Padding="0,5,0,5" SnapsToDevicePixels="true"
                       Background="#F0F0FF" CornerRadius="{DynamicResource StandardCornerRadius}" BorderThickness="1"
                            Visibility="{Binding ElementName=m_Content, Path=Content, Converter={StaticResource m_VisibilityConverter}}">
                        <ContentPresenter x:Name="m_Content"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="DarkBlue"/>
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#FFBED7FE" Offset="0.1"/>
                                        <GradientStop Color="#FF6C82CC" Offset="0.51"/>
                                        <GradientStop Color="#FF5567A1" Offset="0.986"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="DarkBlue" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="DarkOrange"/>
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#FFFFD5A0" Offset="0.3"/>
                                        <GradientStop Color="#FFFFA335" Offset="0.51"/>
                                        <GradientStop Color="#FFFFC14A" Offset="0.986"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--<Trigger  Property="" Value="Collapsed">
                            <Setter TargetName="Border" Property="Padding" Value="0"/>
                            <Setter TargetName="Border" Property="Margin" Value="0"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="BiosInfoItem">
        <Grid Height="85" Width="{DynamicResource ItemWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image Margin="5" x:Name="m_icon" Source="../Assests/Images/Unknown.png"/>
            <StackPanel Margin="5,0" Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource ZoneTitle}" />
                    <TextBlock Text="{Binding Zone}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource VersionTitle}" />
                    <TextBlock Text="{Binding Version}" TextWrapping="Wrap" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource DateTitle}" />
                    <TextBlock Text="{Binding Data}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource TypeTitle}" />
                    <TextBlock Text="{Binding Build}" />
                </StackPanel>
            </StackPanel>
            <Button Grid.Column="1" 
                                
                    Style="{DynamicResource RemoveBtn}" 
                    
                    CommandParameter="{Binding RelativeSource={RelativeSource  
                        FindAncestor, 
                        AncestorType={x:Type Grid}, 
                        AncestorLevel=1}, Path=DataContext}"
                                
                    DataContext="{Binding RelativeSource={RelativeSource  
                        FindAncestor, 
                        AncestorType={x:Type UserControl}, 
                        AncestorLevel=1}, Path=DataContext}" 
                                 />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Zone}" Value="Test">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Test.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="Europe">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Europe.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="Japan">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Japan.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="USA">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/USA.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="Free">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Free.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="China">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/China.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="HK">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/HK.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="T10K">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/T10K.png" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="IsoInfoItem">
        <Grid  Width="{DynamicResource ItemWidth}">
            <Grid.Resources>
                <converters:CompatibilityConverter x:Key="m_CompatibilityConverter" />
                <converters:WideScreenConverter x:Key="m_WideScreenConverter" />                
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Margin="5,0, 5, 0">
                <TextBlock Text="{Binding Title}" TextWrapping="Wrap" />
                <TextBlock Margin="0,5,0,0" Text="{Binding DiscSerial,
                                
                                Converter={StaticResource m_CompatibilityConverter}                                
                                
                                }" TextWrapping="Wrap" />
            </StackPanel>
            <Button             Grid.Column="1"
                                
                                Style="{DynamicResource RemoveBtn}" 
                                
                                CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type UserControl}, 
                                   AncestorLevel=1}, Path=DataContext}" 
                                 />
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Height="120">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Image Margin="5" RenderOptions.BitmapScalingMode="Fant" x:Name="m_icon" Source="../Assests/Images/ISO.png"/>
                <StackPanel Margin="5,0" Grid.Column="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{DynamicResource TypeISOTitle}" />
                        <TextBlock Text="{Binding IsoType}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{DynamicResource GameDiscTypeTitle}" />
                        <TextBlock Text="{Binding GameDiscType}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{DynamicResource DiscRegionTypeTitle}" />
                        <TextBlock Text="{Binding DiscRegionType}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{DynamicResource VersionTitle}" />
                        <TextBlock Text="{Binding SoftwareVersion}" TextWrapping="Wrap" />
                    </StackPanel>
                    <TextBlock Visibility="{Binding ElfCRC, Converter={StaticResource m_WideScreenConverter}}" 
                               Text="{DynamicResource WideScreenTitle}" 
                               TextWrapping="Wrap" />
                </StackPanel> 
            </Grid>
        </Grid>        
    </DataTemplate>

    <DataTemplate x:Key="StateInfoItem">
        <Grid  Width="{DynamicResource ItemWidth}">
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Height="125">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Image Margin="5" RenderOptions.BitmapScalingMode="Fant" x:Name="m_icon" Stretch="Uniform" Source="{Binding ImageSource}"/>
                <Border
                    x:Name="mAutoTitleBorder"
                    Opacity="{DynamicResource StandardOpacity}"
                    BorderBrush="{DynamicResource StandardBorderBrush}"
                    Background="{DynamicResource MainBackgroundBrush}"
                    BorderThickness="{DynamicResource StandardBorderThickness}"
                    CornerRadius="{DynamicResource StandardCornerRadius}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top">
                    <TextBlock Margin="5" Foreground="{DynamicResource MainForegroundBrush}" Text="{DynamicResource AutosaveTitle}" FontWeight="Bold"/>
                </Border>
                <Border
                    x:Name="mQuickTitleBorder"
                    Opacity="{DynamicResource StandardOpacity}"
                    BorderBrush="{DynamicResource StandardBorderBrush}"
                    Background="{DynamicResource MainBackgroundBrush}"
                    BorderThickness="{DynamicResource StandardBorderThickness}"
                    CornerRadius="{DynamicResource StandardCornerRadius}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top">
                    <TextBlock Margin="5" Foreground="{DynamicResource MainForegroundBrush}" Text="{DynamicResource QuicksaveTitle}" FontWeight="Bold"/>
                </Border>
                <StackPanel Margin="0,0" Grid.Column="1" HorizontalAlignment="Left">
                    <TextBlock FontSize="14" Text="{Binding Date}" TextWrapping="Wrap" />
                    <TextBlock x:Name="mDurationTitle" FontSize="14" Visibility="Visible"  Margin="0, 3, 0 , 0" Text="{DynamicResource DurationTitle}" />
                    <TextBlock FontSize="14" Text="{Binding Duration}" />
                </StackPanel>
                <Button Grid.Column="1"                                
                        Style="{DynamicResource RemoveBtn}"                                 
                        CommandParameter="{Binding RelativeSource={RelativeSource  
                            FindAncestor, 
                            AncestorType={x:Type Grid}, 
                            AncestorLevel=1}, Path=DataContext}"                                
                        DataContext="{Binding RelativeSource={RelativeSource  
                            FindAncestor, 
                            AncestorType={x:Type UserControl}, 
                            AncestorLevel=1}, Path=DataContext}"/>
                <Border Visibility="{Binding IsVisibilityGoogleAccount}" 
                        IsEnabled="{Binding GoogleAccountIsEnabled}" 
                        VerticalAlignment="Bottom"
                        Grid.Column="1"    
                        DataContext="{Binding RelativeSource={RelativeSource  
                            FindAncestor, 
                            AncestorType={x:Type UserControl}, 
                            AncestorLevel=1}, Path=DataContext}">
                    <Button Style="{DynamicResource DriveBtn}"                                 
                        CommandParameter="{Binding RelativeSource={RelativeSource  
                            FindAncestor, 
                            AncestorType={x:Type Grid}, 
                            AncestorLevel=1}}"                                
                        DataContext="{Binding RelativeSource={RelativeSource  
                            FindAncestor, 
                            AncestorType={x:Type UserControl}, 
                            AncestorLevel=1}, Path=DataContext}">
                        <Image Source="/Assests/Images/Google_Drive.png" 
                                       Stretch="Uniform" 
                                       Height="64" 
                                       Width="64"/>
                    </Button>
                </Border>
                <Grid Grid.Row="1" Grid.ColumnSpan="2" x:Name="m_Access_Control_Grid" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border VerticalAlignment="Center" HorizontalAlignment="Center" 
                            Visibility="{Binding Visibility}">
                        <Button Style="{DynamicResource IconBtn}" 
                            
                            Command="{Binding LoadCommand}"                                
                                
                            CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                                                
                            DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type UserControl}, 
                                   AncestorLevel=1}, Path=DataContext}"                             
                            >
                            <Image IsEnabled="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Button}, 
                                   AncestorLevel=1}, Path=IsEnabled}" 
                                   Source="../Assests/Images/LoadState.png" 
                                   Stretch="Uniform" 
                                   Height="30" 
                                   Width="30"/>
                        </Button>
                    </Border>
                    <Border VerticalAlignment="Center" 
                            HorizontalAlignment="Center" 
                            Grid.Column="1"
                            x:Name="m_SaveBorder">
                        <Button Style="{DynamicResource IconBtn}"                   
                                Command="{Binding SaveCommand}"                           
                                                            
                                CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type UserControl}, 
                                   AncestorLevel=1}, Path=DataContext}"                             
                            >
                            <Image IsEnabled="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Button}, 
                                   AncestorLevel=1}, Path=IsEnabled}" 
                               Source="../Assests/Images/SaveState.png" 
                               Stretch="Uniform" 
                               Height="30" 
                               Width="30"/>
                        </Button>
                    </Border>
                </Grid>
                <Border Grid.Row="1" Grid.ColumnSpan="2" x:Name="m_Drivesave_Border"
                    Opacity="{DynamicResource StandardOpacity}"
                    BorderBrush="{DynamicResource StandardBorderBrush}"
                    Background="{DynamicResource MainBackgroundBrush}"
                    BorderThickness="{DynamicResource StandardBorderThickness}"
                    CornerRadius="{DynamicResource StandardCornerRadius}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <TextBlock Margin="5" Foreground="{DynamicResource MainForegroundBrush}" Text="{DynamicResource DrivesaveTitle}" FontWeight="Bold"/>                    
                </Border>
                <Border x:Name="mProgressBannerBorder" Grid.RowSpan="2" Visibility="Collapsed" Grid.ColumnSpan="2" Background="#70000000">
                    <Grid>
                        <Viewbox>
                            <panels:ProgressBanner/>
                        </Viewbox>
                        <StackPanel Margin="0,0,5,0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock x:Name="mUploadProgressTitleTextBlock" Visibility="Collapsed" Foreground="{DynamicResource MainForegroundBrush}" TextAlignment="Center" TextWrapping="Wrap" FontSize="{DynamicResource ProgressFontSize}" Text="{DynamicResource UploadingProgressTitle}"/>
                            <TextBlock x:Name="mDownloadProgressTitleTextBlock" Visibility="Collapsed" Foreground="{DynamicResource MainForegroundBrush}" TextAlignment="Center" TextWrapping="Wrap" FontSize="{DynamicResource ProgressFontSize}" Text="{DynamicResource DownloadingProgressTitle}"/>
                            <TextBlock Foreground="{DynamicResource MainForegroundBrush}" TextAlignment="Center" FontSize="{DynamicResource AboutFontSize}" x:Name="mProgressTextBlock"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ImageSource}" Value="{x:Null}">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/None.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Duration}" Value="{x:Null}">
                <Setter TargetName="mDurationTitle" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAutosave}" Value="False">
                <Setter TargetName="mAutoTitleBorder" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="m_SaveBorder" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAutosave}" Value="True">
                <Setter TargetName="m_SaveBorder" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsQuicksave}" Value="False">
                <Setter TargetName="mQuickTitleBorder" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsQuicksave}" Value="True">
                <Setter TargetName="m_SaveBorder" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCloudOnlysave}" Value="True">
                <Setter TargetName="m_Access_Control_Grid" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="m_Drivesave_Border" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCloudOnlysave}" Value="False">
                <Setter TargetName="m_Drivesave_Border" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="m_Access_Control_Grid" Property="Visibility" Value="Visible"/>
            </DataTrigger>  
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="AutoStateInfoItem">
        <Grid  Width="{DynamicResource ItemWidth}">
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Height="125">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Image Margin="5" RenderOptions.BitmapScalingMode="Fant" x:Name="m_icon" Stretch="Uniform" Source="{Binding ImageSource}"/>
                <Border
                    x:Name="mAutoTitleBorder"
                    Opacity="{DynamicResource StandardOpacity}"
                    BorderBrush="{DynamicResource StandardBorderBrush}"
                    Background="{DynamicResource MainBackgroundBrush}"
                    BorderThickness="{DynamicResource StandardBorderThickness}"
                    CornerRadius="{DynamicResource StandardCornerRadius}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top">
                    <TextBlock Margin="5" Foreground="{DynamicResource MainForegroundBrush}" Text="{DynamicResource AutosaveTitle}" FontWeight="Bold"/>
                </Border>
                <StackPanel Margin="0,0" Grid.Column="1" HorizontalAlignment="Left">
                    <TextBlock Text="{Binding Date}" TextWrapping="Wrap" />
                    <TextBlock x:Name="mDurationTitle" Visibility="Visible"  Margin="0, 3, 0 , 0" Text="{DynamicResource DurationTitle}" />
                    <TextBlock Text="{Binding Duration}" />
                </StackPanel>
                <Border x:Name="m_Access_Border" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,20,5" VerticalAlignment="Center" HorizontalAlignment="Right" 
                            Visibility="{Binding Visibility}">
                    <Button Style="{DynamicResource IconBtn}" 
                            
                            Command="{Binding LoadCommand}"                                
                                
                            CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                                                
                            DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type UserControl}, 
                                   AncestorLevel=1}, Path=DataContext}"                             
                            >
                        <Image IsEnabled="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Button}, 
                                   AncestorLevel=1}, Path=IsEnabled}" 
                                   Source="../Assests/Images/LoadState.png" 
                                   Stretch="Uniform" 
                                   Height="30" 
                                   Width="30"/>
                    </Button>
                </Border>
                <Border x:Name="mProgressBannerBorder" Grid.RowSpan="2" Grid.ColumnSpan="2" CornerRadius="5" Visibility="Collapsed" Background="#70000000">
                    <Grid>
                        <Viewbox>
                            <panels:ProgressBanner/>
                        </Viewbox>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock x:Name="mUploadProgressTitleTextBlock" Visibility="Collapsed" Foreground="{DynamicResource MainForegroundBrush}" TextAlignment="Center" TextWrapping="Wrap" FontSize="{DynamicResource ProgressFontSize}" Text="{DynamicResource UploadingProgressTitle}"/>
                            <TextBlock x:Name="mDownloadProgressTitleTextBlock" Visibility="Collapsed" Foreground="{DynamicResource MainForegroundBrush}" TextAlignment="Center" TextWrapping="Wrap" FontSize="{DynamicResource ProgressFontSize}" Text="{DynamicResource DownloadingProgressTitle}"/>
                            <TextBlock Foreground="{DynamicResource MainForegroundBrush}" TextAlignment="Center" FontSize="{DynamicResource AboutFontSize}" x:Name="mProgressTextBlock"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ImageSource}" Value="{x:Null}">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/None.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Duration}" Value="{x:Null}">
                <Setter TargetName="mDurationTitle" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAutosave}" Value="False">
                <Setter TargetName="mAutoTitleBorder" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCloudOnlysave}" Value="True">
                <Setter TargetName="m_Access_Border" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>    

    <DataTemplate x:Key="ScreenshotInfoItem">
        <Grid Height="105" Width="{DynamicResource ItemWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Image Margin="5" x:Name="m_icon" Stretch="Uniform" Source="{Binding SmallImageSource}"/>
            <Button Grid.Column="0"
                                
                                Style="{DynamicResource RemoveBtn}" 
                                
                                CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ContentControl}, 
                                   AncestorLevel=3}, Path=DataContext}" 
                                 />
            <TextBlock Margin="2,0" Background="#A0000000" Padding="5,2.5" Foreground="White" Text="{Binding FileName}" TextTrimming="CharacterEllipsis" VerticalAlignment="Bottom"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SmallImageSource}" Value="{ x:Null}">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Media.png" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="MemoryCardInfoItem">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            
            
            <TextBlock Text="{Binding FileName}" TextWrapping="Wrap" />
            <StackPanel Grid.ColumnSpan="2" Grid.Row="1" Margin="0, 5, 0, 0" Orientation="Vertical">
                <TextBlock Text="{DynamicResource LastDateTitle}"/>
                <TextBlock Text="{Binding Date}" TextWrapping="Wrap" />
            </StackPanel>
            <Border Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-5,-5,-5" Visibility="{Binding Visibility}">
                <Button Style="{DynamicResource RemoveBtn}" 
                                
                                CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type UserControl}, 
                                   AncestorLevel=1}, Path=DataContext}" 
                                 />
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaSourceInfoItem">
        <Grid Height="105" x:Name="m_Grid" Width="{DynamicResource ItemWidth}">
            <Grid.Resources>
                <converters:InverseBooleanConverter x:Key="m_InverseBooleanConverter" />
                <converters:BooleanToVisibilityConverter IsInverse="True" x:Key="m_InverseBooleanToVisibilityConverter" />
                <converters:BooleanToVisibilityConverter IsInverse="False" x:Key="m_BooleanToVisibilityConverter" />
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Image Margin="5" x:Name="m_icon" Stretch="Uniform"
                      Grid.ColumnSpan="2" Source="{Binding ImageSource}"/>
            <TextBlock Margin="2,0" Background="#A0000000" Padding="5,2.5" Foreground="White" 
                       Text="{Binding Name}" TextAlignment="Center" x:Name="m_Title" Grid.ColumnSpan="2" TextTrimming="CharacterEllipsis" VerticalAlignment="Top"/>

            <Button Grid.Column="1" x:Name="mRemoveBtn"
                                Visibility="Hidden"
                                Style="{DynamicResource RemoveBtn}" 
                                
                                CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ContentControl}, 
                                   AncestorLevel=3}, Path=DataContext}" 
                                 />
            <CheckBox x:Name="ChkBx" Margin="0,-5,3,0"
                      Grid.Column="1"
                      Style="{DynamicResource MainStateCheckBox}" 
                      Command="{Binding LaunchSource}"
                                     IsChecked="{Binding IsCheckedMediaSource, Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Expander}, 
                                   AncestorLevel=1}, Path=DataContext}" 
                      VerticalAlignment="Center" HorizontalAlignment="Right"/>

            <ComboBox x:Name="mMediaTypesCmbBx"
                      Grid.ColumnSpan="2"
                      ItemsSource="{Binding Path=MediaTypes}"
                      IsEnabled="{Binding ElementName=ChkBx, Path=IsChecked, Converter={StaticResource m_InverseBooleanConverter}}" 
                      SelectedIndex="{Binding SelectedMediaTypeIndex}"     
                      SelectedItem="{Binding SelectedMediaType}"
                      VerticalAlignment="Bottom" Margin="5">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock x:Name="mWidthTextblock"/>
                            <TextBlock Text=" x "/>
                            <TextBlock x:Name="mHeightTextblock"/>
                            <TextBlock Text=", "/>
                            <TextBlock x:Name="mFrameRateTextblock"/>
                            <TextBlock Text=", "/>
                            <TextBlock x:Name="mVideoFormatTextblock"/>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Name}" Value="MediaType"/>
                                    <Condition Value="MFMediaType_Video">
                                        <Condition.Binding>
                                            <Binding XPath="MediaTypeItem[@Name='MF_MT_MAJOR_TYPE']/SingleValue/@Value" />
                                        </Condition.Binding>
                                    </Condition>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="mWidthTextblock" Property="Text">
                                    <Setter.Value>
                                        <Binding XPath="MediaTypeItem[@Name='MF_MT_FRAME_SIZE']/Value.ValueParts/ValuePart[1]/@Value" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="mHeightTextblock" Property="Text">
                                    <Setter.Value>
                                        <Binding XPath="MediaTypeItem[@Name='MF_MT_FRAME_SIZE']/Value.ValueParts/ValuePart[2]/@Value" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="mFrameRateTextblock" Property="Text">
                                    <Setter.Value>
                                        <Binding XPath="MediaTypeItem[@Name='MF_MT_FRAME_RATE']/RatioValue/@Value" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="mVideoFormatTextblock" Property="Text">
                                    <Setter.Value>
                                        <Binding XPath="MediaTypeItem[@Name='MF_MT_SUBTYPE']/SingleValue/@Value" />
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Name}" Value="MediaType"/>
                                    <Condition Value="MFMediaType_Audio">
                                        <Condition.Binding>
                                            <Binding XPath="MediaTypeItem[@Name='MF_MT_MAJOR_TYPE']/SingleValue/@Value" />
                                        </Condition.Binding>
                                    </Condition>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="mWidthTextblock" Property="Text">
                                    <Setter.Value>
                                        <Binding XPath="MediaTypeItem[@Name='MF_MT_AUDIO_BITS_PER_SAMPLE']/SingleValue/@Value" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="mHeightTextblock" Property="Text">
                                    <Setter.Value>
                                        <Binding XPath="MediaTypeItem[@Name='MF_MT_AUDIO_NUM_CHANNELS']/SingleValue/@Value" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="mFrameRateTextblock" Property="Text">
                                    <Setter.Value>
                                        <Binding XPath="MediaTypeItem[@Name='MF_MT_AUDIO_SAMPLES_PER_SECOND']/SingleValue/@Value" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="mVideoFormatTextblock" Property="Text">
                                    <Setter.Value>
                                        <Binding XPath="MediaTypeItem[@Name='MF_MT_SUBTYPE']/SingleValue/@Value" />
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Grid Grid.ColumnSpan="2" Visibility="{Binding ElementName=ChkBx, Path=IsChecked, Converter={StaticResource m_InverseBooleanToVisibilityConverter}}">
                
                <Grid x:Name="mVideoLockGrid" Visibility="Hidden">
                    <Grid Background="#88ffffff"
                                Visibility="{Binding LockVideoSourceVisibility}"
                                                                                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ContentControl}, 
                                   AncestorLevel=3}, Path=DataContext}" 
                                 />
                </Grid>

                <Grid Grid.ColumnSpan="2" x:Name="mAudioLockGrid" Visibility="Hidden">
                    <Grid Background="#88ffffff"
                                Visibility="{Binding LockAudioSourceVisibility}"
                                                                                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ContentControl}, 
                                   AncestorLevel=3}, Path=DataContext}" 
                                 />
                </Grid>
            </Grid>

            <TextBlock Tag="{Binding Variable, Mode=TwoWay}" x:Name="m_VariableTxtBlk" Visibility="Hidden"/>
            
            <Border BorderBrush="{DynamicResource StandardBorderBrush}"
                    CornerRadius="{DynamicResource StandardCornerRadius}"
                    BorderThickness="{DynamicResource StandardBorderThickness}"
                    Padding="5"
                    Background="#77FFFFFF"
                    Visibility="{Binding ElementName=ChkBx, Path=IsChecked, Converter={StaticResource m_BooleanToVisibilityConverter}}" 
                    Grid.ColumnSpan="2" VerticalAlignment="Bottom">
                <Slider Minimum="0" Maximum="1.0" Value="{Binding ElementName=m_VariableTxtBlk, Path=Tag, Mode=TwoWay}" 
                        tools:Extensions.ValueChangedCommand="{Binding ValueChangedCommand}"
                        
                       Tag="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                                        
                        DataContext="{Binding RelativeSource={RelativeSource  
                            FindAncestor, 
                            AncestorType={x:Type ContentControl}, 
                            AncestorLevel=3}, Path=DataContext}" />
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Video">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/WebCam.png" />
                <Setter TargetName="mVideoLockGrid" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Audio">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Mic.png" />
                <Setter TargetName="mAudioLockGrid" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Image">
                <Setter TargetName="mMediaTypesCmbBx" Property="Visibility" Value="Hidden" />
                <Setter TargetName="mRemoveBtn" Property="Visibility" Value="Visible"/>
                <Setter TargetName="mVideoLockGrid" Property="Visibility" Value="Visible"/>
                <Setter TargetName="m_Title" Property="Grid.ColumnSpan" Value="1"/>
            </DataTrigger>            
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="StreamingCaptureConfigInfoItem">
        <Grid  x:Name="m_Grid" Width="150" HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
            <CheckBox x:Name="ChkBx" Margin="0,0,5,0"
                      Width="28" Height="28"
                      Grid.Column="1"
                      Style="{DynamicResource MainStateCheckBox}" 
                      Command="{Binding OpenConfig}"
                      IsChecked="{Binding IsCheckedStreamingCaptureConfig, Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                
                                DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListView}, 
                                   AncestorLevel=1}, Path=DataContext}" 
                      VerticalAlignment="Center" HorizontalAlignment="Right"/>
        </Grid>
    </DataTemplate>



    <DataTemplate x:Key="YouTubeItem">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            
            <Button Style="{DynamicResource RemoveBtn}"                                 
                        CommandParameter="{Binding RelativeSource={RelativeSource  
                            FindAncestor, 
                            AncestorType={x:Type Grid}, 
                            AncestorLevel=1}, Path=DataContext}"                                
                        DataContext="{Binding RelativeSource={RelativeSource  
                            FindAncestor, 
                            AncestorType={x:Type UserControl}, 
                            AncestorLevel=1}, Path=DataContext}"/>
            <TextBlock Grid.Row="1"  Text="{Binding Title}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10" TextWrapping="Wrap" TextAlignment="Center"/>
        </Grid>
    </DataTemplate>

</ResourceDictionary>