<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Golden_Phi.Tools.Converters"
                    xmlns:viewModels="clr-namespace:Golden_Phi.ViewModels">

    <ItemsPanelTemplate x:Key="HorizontalButtonItemsPanel">
        <StackPanel Orientation="Horizontal" Background="Transparent"/>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="VerticalButtonItemsPanel">
        <StackPanel Orientation="Vertical" Background="Transparent"/>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="TileItemsPanel">
        <WrapPanel Background="Transparent"/>
    </ItemsPanelTemplate>

    <Style TargetType="{x:Type ListViewItem}" >
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource UnselectBorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource UnselectBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Viewbox Stretch="UniformToFill" Margin="2">
                        <ContentPresenter/>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource SelectBorderBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SelectBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HScrolledRecentIsoInfoListView" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ItemsSource" Value="{Binding Collection}"/>
        <Setter Property="ItemTemplateSelector" Value="{Binding DataTemplateSelector}"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="ItemsPanel" Value="{Binding ItemsPanelTemplateSelector}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <ScrollViewer Style="{DynamicResource HFlippedScrollViewer}" Padding="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Viewbox Stretch="UniformToFill" Margin="2">
                                <Button Style="{DynamicResource IconBtn}" Command="{Binding InteractCommand}"                                                                                                         
                                    DataContext="{Binding RelativeSource={RelativeSource  
                                           FindAncestor, 
                                           AncestorType={x:Type UserControl}, 
                                           AncestorLevel=1}, Path=DataContext}">
                                    <Button.CommandParameter>
                                        <viewModels:IsoInfoViewModel/>
                                    </Button.CommandParameter>
                                    <Grid>
                                        <Viewbox VerticalAlignment="Center" HorizontalAlignment="Center" Height="95" Width="156" Stretch="Fill">
                                            <Grid>
                                                <Path Fill="{Binding RelativeSource={RelativeSource  
                                                  FindAncestor, 
                                                  AncestorType={x:Type Button}, 
                                                  AncestorLevel=1}, Path=Background}"
                                                  StrokeThickness="1"
                                                  Stroke="Transparent"
                                                  Style="{DynamicResource MainBorderPath}"/>
                                                <Viewbox Margin="0,10,0,15">
                                                    <Path Fill="{DynamicResource SettinsBackgroundBrush}" Stroke="{DynamicResource OverBorderBrush}" Data="M5,3C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3H5M12,5C15.09,5 17.82,7.04 18.7,10H16A1,1 0 0,0 15,11V13A1,1 0 0,0 16,14H18.71C17.82,16.97 15.09,19 12,19A7,7 0 0,1 5,12A7,7 0 0,1 12,5M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10Z" />
                                                </Viewbox>
                                            </Grid>                                            
                                        </Viewbox>
                                    </Grid>
                                </Button>
                            </Viewbox>
                        </StackPanel>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TileInfoListViewItem" TargetType="{x:Type ListViewItem}" >
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource UnselectBorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource UnselectBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Viewbox Stretch="Uniform"  Width="300">
                        <Border Margin="6" x:Name="Border">
                            <ContentPresenter/>
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource SelectBorderBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SelectBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TileInfoListView" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ItemsSource" Value="{Binding Collection}"/>
        <Setter Property="ItemTemplateSelector" Value="{Binding DataTemplateSelector}"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="ItemsPanel" Value="{DynamicResource TileItemsPanel}"/>
        <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource TileInfoListViewItem}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <ScrollViewer Style="{DynamicResource VFlippedScrollViewer}" Padding="{TemplateBinding Padding}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ItemsSource" Value="{Binding Collection}"/>
        <Setter Property="ItemTemplateSelector" Value="{Binding DataTemplateSelector}"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="ItemsPanel" Value="{Binding ItemsPanelTemplateSelector}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="RecentIsoInfoItem">
        <Grid>
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="1" Color="{DynamicResource DropShadowColor}"/>
            </Grid.Effect>
            <Viewbox VerticalAlignment="Center" HorizontalAlignment="Center" Height="95" Width="156" Stretch="Fill">
                <Path Fill="Transparent"
                          StrokeThickness="1"
                          Stroke="Transparent"
                          Style="{DynamicResource MainBorderPath}"
                       x:Name="m_innerPath"/>
            </Viewbox>
            <Path Fill="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center"
                          Stroke="{Binding RelativeSource={RelativeSource  
                                           FindAncestor, 
                                           AncestorType={x:Type ListViewItem}, 
                                           AncestorLevel=1}, Path=BorderBrush}" 
                          StrokeThickness="1" 
                          Style="{DynamicResource MainBorderPath}"/>
            <UserControl VerticalAlignment="Center" HorizontalAlignment="Center" Height="95" Width="156" x:Name="LogoPanel">
                <UserControl.Clip>
                    <PathGeometry Figures="{DynamicResource MainBorderPathFigure}" />
                </UserControl.Clip>
            </UserControl>


            <Viewbox VerticalAlignment="Center" HorizontalAlignment="Center" Height="96" Width="157" Stretch="Fill">
                <Image Height="95" Width="156" Stretch="Fill" Source="{Binding ImageSource}">
                    <Image.Clip>
                        <PathGeometry Figures="{DynamicResource MainBorderPathFigure}" />
                    </Image.Clip>
                </Image>
            </Viewbox>

            <Border VerticalAlignment="Top" HorizontalAlignment="Left" Background="{DynamicResource HeaderBackgroundBrush}" Padding="2" Margin="3.5,4,4,3.5">
                <TextBlock FontWeight="Bold" Margin="2,0" MaxWidth="100" MaxHeight="28" FontSize="10" Text="{Binding Title}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" />
            </Border>


            <Border x:Name="m_SavingBrd" VerticalAlignment="Top" Margin="2,30,3,0" HorizontalAlignment="Right"
                    DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListView}, 
                                   AncestorLevel=1}, Path=DataContext}">
                <Button Style="{DynamicResource SavingBtn}"
                         Height="18" Width="18"
                    CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"/>
            </Border>
            
            <Border VerticalAlignment="Bottom" Height="20" Width="20" Margin="2,2,2,3" HorizontalAlignment="Right">
                <ContentPresenter Content="{Binding ActiveStateImage}"/>
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding BIOS}" Value="">
                <Setter TargetName="m_SavingBrd" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ImageSource}" Value="{x:Null}">
                <Setter TargetName="m_innerPath" Property="Fill" Value="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListViewItem}, 
                                   AncestorLevel=1}, Path=Background}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ImageSource}" Value="{x:Null}"/>
                    <Condition Binding="{Binding GameType}" Value="PS1"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="LogoPanel" Property="Style"  Value="{DynamicResource PS1LogoPanel}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ImageSource}" Value="{x:Null}"/>
                    <Condition Binding="{Binding GameType}" Value="PS2"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="LogoPanel" Property="Style"  Value="{DynamicResource PS2LogoPanel}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ImageSource}" Value="{x:Null}"/>
                    <Condition Binding="{Binding GameType}" Value="PSP"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="LogoPanel" Property="Style"  Value="{DynamicResource PSPLogoPanel}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding GameType}" Value="PSP">
                <Setter TargetName="m_SavingBrd" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="IsoInfoItem">
        <Grid Margin="10">
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="1" Color="{DynamicResource DropShadowColor}"/>
            </Grid.Effect>
            <Viewbox VerticalAlignment="Center" HorizontalAlignment="Center" Height="95" Width="156" Stretch="Fill">
                <Path Fill="Transparent"
                          StrokeThickness="1"
                          Stroke="Transparent"
                          Style="{DynamicResource MainBorderPath}"
                       x:Name="m_innerPath"/>
            </Viewbox>
            <Path Fill="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center"
                          Stroke="{Binding RelativeSource={RelativeSource  
                                           FindAncestor, 
                                           AncestorType={x:Type ListViewItem}, 
                                           AncestorLevel=1}, Path=BorderBrush}" 
                          StrokeThickness="1" 
                          Style="{DynamicResource MainBorderPath}"/>
            <UserControl VerticalAlignment="Center" HorizontalAlignment="Center" Height="95" Width="156" x:Name="LogoPanel">
                <UserControl.Clip>
                    <PathGeometry Figures="{DynamicResource MainBorderPathFigure}" />
                </UserControl.Clip>
            </UserControl>


            <Viewbox VerticalAlignment="Center" HorizontalAlignment="Center" Height="96" Width="157" Stretch="Fill">
                <Image Height="95" Width="156" Stretch="Fill" Source="{Binding ImageSource}">
                    <Image.Clip>
                        <PathGeometry Figures="{DynamicResource MainBorderPathFigure}" />
                    </Image.Clip>
                </Image>
            </Viewbox>

            <Border VerticalAlignment="Top" HorizontalAlignment="Left" Background="{DynamicResource HeaderBackgroundBrush}" Padding="2" Margin="3.5,4,4,3.5">
                <TextBlock FontWeight="Bold" Margin="2,0" MaxWidth="100" MaxHeight="28" FontSize="10" Text="{Binding Title}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" />
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ImageSource}" Value="{x:Null}">
                <Setter TargetName="m_innerPath" Property="Fill" Value="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListViewItem}, 
                                   AncestorLevel=1}, Path=Background}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ImageSource}" Value="{x:Null}"/>
                    <Condition Binding="{Binding GameType}" Value="PS1"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="LogoPanel" Property="Style"  Value="{DynamicResource PS1LogoPanel}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ImageSource}" Value="{x:Null}"/>
                    <Condition Binding="{Binding GameType}" Value="PS2"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="LogoPanel" Property="Style"  Value="{DynamicResource PS2LogoPanel}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ImageSource}" Value="{x:Null}"/>
                    <Condition Binding="{Binding GameType}" Value="PSP"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="LogoPanel" Property="Style"  Value="{DynamicResource PSPLogoPanel}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="BiosInfoItem">
        <Grid Height="89"                         >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0">
                <Path VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1.25" Height="85"  Width="250" 
                          Fill="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListViewItem}, 
                                   AncestorLevel=1}, Path=Background}"
                          StrokeThickness="1"
                          Stroke="Transparent"
                          Data="M 0,0 L 201,0 L 241,26 L 241,78 L 40,78 L 0,52 Z"/>

                <Path  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="89"  Width="254" 
                          Fill="Transparent"
                          Stroke="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListViewItem}, 
                                   AncestorLevel=1}, Path=BorderBrush}" StrokeThickness="1"
                          Data="M 0,0 L 204,0 L 245,27 L 245,82 L 41,82 L 0,55 Z"/>
            </Grid>


            <Image Margin="45,10,0,18" x:Name="m_icon" Source="../Assests/Images/Unknown.png"/>

            <StackPanel Margin="5,8,5,10" Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource ZoneTitle}" />
                    <TextBlock Text="{Binding Zone}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource VersionTitle}" />
                    <TextBlock Text="{Binding Version}" TextWrapping="Wrap" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource DateTitle}" />
                    <TextBlock Text="{Binding Data}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource TypeTitle}" />
                    <TextBlock Text="{Binding Build}" />
                </StackPanel>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Zone}" Value="Test">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Test.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="Europe">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Europe.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="Japan">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Japan.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="USA">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/USA.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="Free">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/Free.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="China">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/China.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="HK">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/HK.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Zone}" Value="T10K">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/T10K.png" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ConfigItem">
        <Grid>
            <Grid.Style>
                <Style>
                    <Setter Property="Control.FontSize" Value="13"/>
                    <Setter Property="Control.FontWeight" Value="Bold"/>                 
                </Style>
            </Grid.Style>
            <Path VerticalAlignment="Center" HorizontalAlignment="Center" 
                  Fill="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListViewItem}, 
                                   AncestorLevel=1}, Path=Background}"
                          StrokeThickness="1"
                          Stroke="Transparent"
                          Style="{DynamicResource ConfigFillPath}"/>
            <Path VerticalAlignment="Center" HorizontalAlignment="Center"
                  Fill="Transparent" 
                          Stroke="{Binding RelativeSource={RelativeSource  
                                           FindAncestor, 
                                           AncestorType={x:Type ListViewItem}, 
                                           AncestorLevel=1}, Path=BorderBrush}" 
                          StrokeThickness="1" 
                          Style="{DynamicResource ConfigBorderPath}"/>

            <ContentPresenter Content="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Left"  Width="150" Margin="26,-3,14,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="StateInfoItem">
        <Grid>
            <Button Style="{DynamicResource IconBtn}"                             
                            Command="{Binding LoadCommand}"                               
                                
                            CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                                                
                            DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type UserControl}, 
                                   AncestorLevel=1}, Path=DataContext}"                             
                            >
                <Grid Height="89"  DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0">
                        <Path VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1.25" Height="85"  Width="250" 
                          Fill="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListViewItem}, 
                                   AncestorLevel=1}, Path=Background}"
                          StrokeThickness="1"
                          Stroke="Transparent"
                          Data="M 0,0 L 201,0 L 241,26 L 241,78 L 40,78 L 0,52 Z"/>

                        <Path  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="89"  Width="254" 
                          Fill="Transparent"
                          Stroke="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type ListViewItem}, 
                                   AncestorLevel=1}, Path=BorderBrush}" StrokeThickness="1"
                          Data="M 0,0 L 204,0 L 245,27 L 245,82 L 41,82 L 0,55 Z"/>
                    </Grid>


                    <Image Margin="40,10,0,18" RenderOptions.BitmapScalingMode="Fant" x:Name="m_icon" VerticalAlignment="Center" Width="100" Source="{Binding ImageSource}"/>

                    <StackPanel Margin="5,8,5,10" Grid.Column="1">
                        <TextBlock FontSize="12" Text="{Binding Date}" TextWrapping="Wrap" />
                        <TextBlock x:Name="mDurationTitle" FontSize="12" Margin="0, 3, 0 , 0" Text="{DynamicResource DurationTitle}" />
                        <TextBlock FontSize="12" Text="{Binding Duration}" />
                    </StackPanel>

                    <Button Style="{DynamicResource RemoveBtn}" x:Name="m_RmBtn" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top" 
                            
                            CommandParameter="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type Grid}, 
                                   AncestorLevel=1}, Path=DataContext}"
                                                                
                            DataContext="{Binding RelativeSource={RelativeSource  
                                   FindAncestor, 
                                   AncestorType={x:Type UserControl}, 
                                   AncestorLevel=1}, Path=DataContext}"  />
                </Grid>
            </Button>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ImageSource}" Value="{x:Null}">
                <Setter TargetName="m_icon" Property="Source" Value="../Assests/Images/None.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAutosave}" Value="True">
                <Setter TargetName="m_RmBtn" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>            
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>